<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:prop="clr-namespace:Clicker.AttachedProperties"
                    xmlns:all="clr-namespace:Clicker"
                    xmlns:resx="clr-namespace:Clicker.Properties"
                    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="Colors.xaml"></ResourceDictionary>
        <ResourceDictionary Source="Fonts.xaml"></ResourceDictionary>
        <ResourceDictionary Source="Texts.xaml"></ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>
    
    <Style TargetType="{x:Type Button}" x:Key="buttonStyle">
        <Setter Property="Width" Value="90"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Margin" Value="10 10 10 10"></Setter>
        
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border 
                            Background="{StaticResource mintCreamBrush}"
                            CornerRadius="5"
                            x:Name="Border"
                            >
                            
                            <Grid>
                                <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Margin="5 0 5 0"
                                    Visibility="{TemplateBinding prop:ActionRunning.ActionIsRunning,Converter={all:BooleanToVisibility}}"
                                    >
                                    <ContentPresenter
                                        Content="{Binding Source={x:Static resx:Resources.start}}"
                                        ></ContentPresenter>
                                </TextBlock>
                                <TextBlock
                                    Style="{StaticResource RotateTextBlock}"
                                    Visibility="{TemplateBinding prop:ActionRunning.ActionIsRunning,Converter={all:BooleanToVisibility},ConverterParameter=true}">
                                    <ContentPresenter></ContentPresenter>
                                </TextBlock>
                            </Grid>

                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource mintCreamBrush}"></Setter>
                            <Setter Property="Background" Value="{StaticResource VermillionBrush}" TargetName="Border"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="buttonStyle2">
        <Setter Property="Width" Value="90"></Setter>
        <Setter Property="Height" Value="30"></Setter>
        <Setter Property="Margin" Value="10 10 10 10"></Setter>

        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border 
                            Background="{StaticResource mintCreamBrush}"
                            CornerRadius="5"
                            x:Name="Border"
                            >
                            <TextBlock
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Margin="5 0 5 0"
                                    >
                                    <ContentPresenter></ContentPresenter>
                            </TextBlock>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource mintCreamBrush}"></Setter>
                            <Setter Property="Background" Value="{StaticResource VermillionBrush}" TargetName="Border"></Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type Button}" x:Key="IconButton">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Margin" Value="1 3 1 1"></Setter>
        <Setter Property="Padding" Value="1 1 1 1"></Setter>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border>
                        <StackPanel>
                            <Image Source="/Images/cursor.ico"></Image>
                            <ContentPresenter
                                VerticalAlignment="Center"
                                HorizontalAlignment="Center"></ContentPresenter>
                        </StackPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="TitleBarButton">
        <Setter Property="Background" Value="Transparent"></Setter>
        <Setter Property="BorderThickness" Value="0"></Setter>
        <Setter Property="Padding" Value="8"></Setter>
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True"></Setter>
        <Setter Property="Foreground" Value="{StaticResource RaisinBlackBrush}"></Setter>

        <Setter Property="LayoutTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1.5"></ScaleTransform>
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center"></ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource VermillionBrush}"></Setter>
            </Trigger>
        </Style.Triggers>

    </Style>

    <Style TargetType="{x:Type RadioButton}" x:Key="RadioButtonStyle">
        <Setter Property="HorizontalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalAlignment" Value="Center"></Setter>
        <Setter Property="VerticalContentAlignment" Value="Center"></Setter>
        <Setter Property="FontSize" Value="{StaticResource FontSizeNormal}"></Setter>
        
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid x:Name="templateRoot" Background="Transparent" SnapsToDevicePixels="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border x:Name="radioButtonBorder" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}" 
                                Background="{TemplateBinding Background}" 
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                Margin="1,1,1,1" 
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid x:Name="markGrid" Margin="2">
                                <Rectangle x:Name="optionMark" Fill="#FF212121" MinWidth="6" MinHeight="6" Opacity="0"/>
                            </Grid>
                        </Border>
                        <ContentPresenter x:Name="contentPresenter" 
                                          ContentTemplate="{TemplateBinding ContentTemplate}" 
                                          Content="{TemplateBinding Content}" 
                                          Grid.Column="1" 
                                          ContentStringFormat="{TemplateBinding ContentStringFormat}" 
                                          Focusable="False" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          Margin="{TemplateBinding Padding}" 
                                          RecognizesAccessKey="True" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasContent" Value="True">
                            <Setter Property="FocusVisualStyle">
                                <Setter.Value>
                                    <Style>
                                        <Setter Property="Control.Template">
                                            <Setter.Value>
                                                <ControlTemplate>
                                                    <Rectangle Margin="14,0,0,0" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="Padding" Value="4,-1,0,0"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="#FFF3F9FF"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource VermillionBrush}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="{StaticResource VermillionBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="#FFE6E6E6"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="#FFBCBCBC"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="#FF707070"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" TargetName="radioButtonBorder" Value="#FFD9ECFF"/>
                            <Setter Property="BorderBrush" TargetName="radioButtonBorder" Value="{StaticResource VermillionBrush}"/>
                            <Setter Property="Fill" TargetName="optionMark" Value="#FF212121"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Opacity" TargetName="optionMark" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter Property="Opacity" TargetName="optionMark" Value="0.56"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>